    package org.example.event.controller.giamdoccoso;

    import org.example.event.entity.KeHoachSuKien;
    import org.example.event.repository.KeHoachSuKienRepository;
    import org.example.event.service.KeHoachSuKienService;
    import org.springframework.beans.factory.annotation.Autowired;
    import org.springframework.data.domain.Page;
    import org.springframework.stereotype.Controller;
    import org.springframework.ui.Model;
    import org.springframework.web.bind.annotation.GetMapping;
    import org.springframework.web.bind.annotation.ModelAttribute;
    import org.springframework.web.bind.annotation.PostMapping;
    import org.springframework.web.bind.annotation.RequestParam;
    import org.springframework.web.servlet.mvc.support.RedirectAttributes;
    import org.springframework.web.bind.annotation.PathVariable;

    import java.util.List;
    import java.util.Optional;

    @Controller
    public class SKController {
        @Autowired
        private KeHoachSuKienRepository kHRepository;

        @Autowired
        private KeHoachSuKienService kHService;

        @GetMapping("/giamdoccoso/kehoach")
        public String keHoach(
                @RequestParam(required = false) String tenKeHoach,
                @RequestParam(required = false) String hocKy,
                @RequestParam(required = false) String trangThai,
                @RequestParam(required = false) String boMon,
                @RequestParam(defaultValue = "0") int page,
                @RequestParam(defaultValue = "10") int size,
                Model model) {

            // L·∫•y danh s√°ch c√°c h·ªçc k·ª≥, tr·∫°ng th√°i v√† b·ªô m√¥n t·ª´ database ho·∫∑c enum
            List<String> danhSachHocKy = List.of("H·ªçc k·ª≥ 1", "H·ªçc k·ª≥ 2", "H·ªçc k·ª≥ 3");
            List<String> danhSachTrangThai = List.of("Ch·ªù duy·ªát", "ƒê√£ duy·ªát", "T·ª´ ch·ªëi");


            // Truy·ªÅn danh s√°ch v√†o Model
            model.addAttribute("danhSachHocKy", danhSachHocKy);
            model.addAttribute("danhSachTrangThai", danhSachTrangThai);


            // Truy·ªÅn gi√° tr·ªã ƒë√£ ch·ªçn ƒë·ªÉ gi·ªØ l·∫°i sau khi submit
            model.addAttribute("selectedHocKy", hocKy);
            model.addAttribute("selectedTrangThai", trangThai);


            // L·∫•y danh s√°ch k·∫ø ho·∫°ch theo b·ªô l·ªçc
            Page<KeHoachSuKien> keHoachList = kHService.searchKeHoach(tenKeHoach, hocKy, trangThai, boMon, page, size);
            model.addAttribute("keHoachList", keHoachList);

            return "giamdoccoso/kehoach";
        }
        @PostMapping("/giamdoccoso/kehoach/add")
        public String addKeHoach(@ModelAttribute KeHoachSuKien kh, RedirectAttributes redirectAttributes) {
            try {
                System.out.println("üü¢ Nh·∫≠n d·ªØ li·ªáu t·ª´ form: " + kh);

                // Ki·ªÉm tra xem ƒë√£ c√≥ k·∫ø ho·∫°ch tr√πng ch∆∞a (d·ª±a v√†o t√™n ho·∫∑c ti√™u ch√≠ kh√°c)
                boolean exists = kHRepository.existsByTenKeHoach(kh.getTenKeHoach());
                if (exists) {
                    redirectAttributes.addFlashAttribute("errorMessage", "K·∫ø ho·∫°ch n√†y ƒë√£ t·ªìn t·∫°i!");
                    return "redirect:/giamdoccoso/kehoach";
                }

                // L∆∞u v√†o database
                kHRepository.save(kh);

                // Ki·ªÉm tra l·∫°i xem ƒë√£ c√≥ trong DB ch∆∞a
                Optional<KeHoachSuKien> savedKH = kHRepository.findById(kh.getId());
                if (savedKH.isPresent()) {
                    System.out.println("‚úÖ ƒê√£ l∆∞u v√†o DB: " + savedKH.get());
                } else {
                    System.out.println("‚ùå L∆∞u th·∫•t b·∫°i!");
                }

                redirectAttributes.addFlashAttribute("successMessage", "Th√™m k·∫ø ho·∫°ch th√†nh c√¥ng!");
            } catch (Exception e) {
                redirectAttributes.addFlashAttribute("errorMessage", "L·ªói khi th√™m k·∫ø ho·∫°ch: " + e.getMessage());
                e.printStackTrace();
            }
            return "redirect:/giamdoccoso/kehoach";
        }

        @GetMapping("/giamdoccoso/kehoach/detail/{id}")
        public String viewKeHoachDetail(@PathVariable Long id, Model model, RedirectAttributes redirectAttributes) {
            Optional<KeHoachSuKien> keHoachOptional = kHRepository.findById(id);

            if (keHoachOptional.isPresent()) {
                model.addAttribute("keHoach", keHoachOptional.get());
                return "giamdoccoso/kehoach-detail"; // Tr·∫£ v·ªÅ trang chi ti·∫øt k·∫ø ho·∫°ch
            } else {
                redirectAttributes.addFlashAttribute("errorMessage", "Kh√¥ng t√¨m th·∫•y k·∫ø ho·∫°ch!");
                return "redirect:/giamdoccoso/kehoach";
            }
        }

    }
